{"name":"Learn Git","tagline":"An Organized Resource for Everything Git","body":"#Learn Git\r\nHere are the best resources I have come across for learning the Git distributed version control system.\r\n\r\n##Development Workflows in Git\r\n[@ScottChacon: GitHub Flow](http://scottchacon.com/2011/08/31/github-flow.html)  \r\n[A Successful Git Branching Model](http://nvie.com/posts/a-successful-git-branching-model/)  \r\n[](https://gist.github.com/jbenet/ee6c9ac48068889b0912)  \r\n[NetTuts—The Perfect Workflow: Git, GitHub, and SSH](http://net.tutsplus.com/tutorials/other/the-perfect-workflow-with-git-github-and-ssh/)  \r\n[@YehudaKatz: Common Git Workflows](http://yehudakatz.com/2010/05/13/common-git-workflows/)  \r\n\r\n###Merge vs. Rebase\r\n[@Mislav: Merge vs. Rebase](http://mislav.uniqpath.com/2013/02/merge-vs-rebase/)  \r\n[SourceTree Blog: Merge or Rebase?](http://blog.sourcetreeapp.com/2012/08/21/merge-or-rebase/)  \r\n[Envato: Rebasing Merge Commits in Git](http://notes.envato.com/developers/rebasing-merge-commits-in-git/)  \r\n[Only You Can Prevent Merge Commits](http://viget.com/extend/only-you-can-prevent-git-merge-commits)  \r\n[The Case for Git Rebase](http://darwinweb.net/articles/the-case-for-git-rebase)  \r\n[Git Rebase Considered Awesome](http://blog.woobling.org/2009/05/git-rebase-considered-awesome.html)  \r\n[@isaacs: Git Is an Editor, and Rebase is the Backspace Key](http://blog.izs.me/post/37650663670/git-rebase)  \r\n\r\n###Pull vs. Fetch\r\n[Smart Pull](http://github-displayer.heroku.com/geelen/git-smart/raw/master/docs/smart-pull.html)  \r\n\r\n###Tagging\r\n[Adding and Removing Tags](http://wptheming.com/2011/04/add-remove-github-tags/)  \r\n[GitReady: Tagging](http://gitready.com/beginner/2009/02/03/tagging.html)  \r\n\r\n##Aliases\r\n[Git Wiki: Aliases](https://git.wiki.kernel.org/index.php/Aliases)  \r\n[Everyday Git Aliases](http://code.joejag.com/2013/everyday-git-aliases/)  \r\n[Must-have Git Aliases](http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/)  \r\n[Idiot-proof Git Aliases](https://gist.github.com/geelen/590895)  \r\n\r\n##Advanced\r\n[Git Hooks](http://git-scm.com/book/en/Customizing-Git-Git-Hooks)  \r\n[Patience Diffs](http://bramcohen.livejournal.com/73318.html)  \r\n[Auto Notify on Git Pull](http://www.h3manth.com/new/blog/2013/auto-notify-git-pull/)  \r\n[Speed up Git 5-50x](http://interrobeng.com/2013/08/25/speed-up-git-5x-to-50x/)  \r\n[Git rerere](http://git-scm.com/blog/2010/03/08/rerere.html)  \r\n[Check out GitHub Pull Requests locally](https://gist.github.com/piscisaureus/3342247)  \r\n[Deploying with Git](https://coderwall.com/p/xczkaq)  \r\n[Hub](http://hub.github.com/)  \r\n\r\n##Courses\r\n[O'Reilly Video - Mastering Git](http://oreilly.com/catalog/0636920017462/)  \r\n[PeepCode - Git Training](http://peepcode.com/products/git)  \r\n\r\n##Videos\r\n[Terminal, Git, and GitHub for the Rest of Us: Screencast](http://net.tutsplus.com/videos/screencasts/terminal-git-and-github-for-the-rest-of-us-screencast/)  \r\n[Git, GitHub and Social Coding - By Scott Chacon, Chris Wanstrath and Tom Preston-Werner (founders of Github)](http://developer.yahoo.com/yui/theater/video.php?v=prestonwerner-github)  \r\n[YUI Theater — Jenny Donnelly: Introduction to Git](http://www.yuiblog.com/blog/2011/06/09/video-f2esummit2011-donnelly/)  \r\n[Master Advanced Git](http://shop.oreilly.com/product/0636920024774.do?imm_mid=07dc31&cmp=em-orm-books-videos-dd-getgit-elist)  \r\n[Simple git and github demo - NumbKnuckle](http://www.numbknuckle.com/git-demo/)  \r\n[Learn how to branch with git - NumbKnuckle](http://www.numbknuckle.com/learn-how-to-branch-with-git/)  \r\n[O'Reilly Webcast: Git in one hour](http://www.youtube.com/watch?v=OFkgSjRnay4)  \r\n[Tech Talk: Linus Torvalds on git](http://youtube.com/watch?v=8dhZ9BXQgc4)  \r\n[GitCasts Screencasts](http://gitcasts.com/)  \r\n[Using Git GUI with Eclipse Part I - Setting up the workspace](http://www.youtube.com/watch?v=DcM1xOiaidk)  \r\n[Using Git GUI with Eclipse Part II - Pushing changes to the server](http://www.youtube.com/watch?v=1OrPJClD92s)  \r\n[Contributing with Git](http://www.youtube.com/watch?v=j45cs5_nY2k)  \r\n[More Git and GitHub Secrets](http://zachholman.com/talk/more-git-and-github-secrets/)  \r\n[How GitHub Uses GitHub to Build GitHub](http://www.youtube.com/watch?v=qyz3jkOBbQY&t=09m12s)  \r\n[Jonathan Stark: An Introduction to Git](http://www.youtube.com/watch?&v=24NGu1vGBiw)  \r\n\r\n##Articles\r\n[A List Apart - Get started with git](http://www.alistapart.com/articles/get-started-with-git/)  \r\n[Easy version control with git](http://net.tutsplus.com/tutorials/other/easy-version-control-with-git/)  \r\n[Getting the hang of GitHub](http://net.tutsplus.com/tutorials/other/getting-the-hang-of-github/)  \r\n[Understanding Git Conceptually](http://www.eecs.harvard.edu/~cduan/technical/git/)  \r\n[Git for Designers](http://hoth.entp.com/output/git_for_designers.html)\r\n[Official git documentation](http://git-scm.com/documentation)  \r\n[Git - The Basics](http://excess.org/article/2008/07/ogre-git-tutorial/)  \r\n[Git cheat sheet](http://zrusin.blogspot.com/2007/09/git-cheat-sheet.html)  \r\n[Git For Windows Developers Series](http://www.lostechies.com/blogs/jason_meridth/archive/2009/06/01/git-for-windows-developers-git-series-part-1.aspx)  \r\n[Getting Started with Git on Mac OS X](http://shaun.boyblack.co.za/blog/2009/03/14/getting-started-with-git-on-mac-os-x/)  \r\n\r\n##Training/Tutorials\r\n[Git Immersion: Step by step tutorials](http://gitimmersion.com/)  \r\n[Try Git on Github: Powered by CodeSchool!](http://try.github.com/)  \r\n[GitHub Training](http://training.github.com/web/free-classes/)  \r\n[Git Immersion](http://gitimmersion.com/index.html)  \r\n[Git Ready](http://gitready.com/)  \r\n[Learn Git Branching: An Interactive Git Branching Tutorial](http://pcottle.github.io/learnGitBranching/)  \r\n\r\n##Reference\r\n###Books\r\n[Pro Git Book (free, open source, online)](http://progit.org/book/)  \r\n[Version Control with Git: Powerful Tools and Techniques for Collaborative Software Development](http://amzn.to/bgOOnO)  \r\n[Pragmatic Version Control Using Git](http://amzn.to/aMEJmL)  \r\n[Getting Good with git (Free ebook)](http://net.tutsplus.com/freebies/books/getting-good-with-git-free-ebook/)  \r\n\r\n###Wikis/Sites\r\n[GitHub Help](https://help.github.com/)\r\n[Gitref (also redirects from learn.github.com)](http://gitref.org/)  \r\n[Git FAQ](http://git.or.cz/gitwiki/GitFaq)  \r\n[Think Like a git](http://think-like-a-git.net/) \r\n[Git Ready](http://www.gitready.com/)  \r\n\r\n##GUI clients\r\n###Mac\r\n[GitHub for Mac](http://mac.github.com)\r\n[GitX](http://gitx.frim.nl/)  \r\n[Tower: The most powerful git client for Mac](http://www.git-tower.com/)  \r\n[Gitbox: The Everyday git interface for human beings.](http://gitbox.pierlis.com/)  \r\n\r\n###Windows, Linux, and Mac\r\n[Egit Eclipse plugin](http://www.eclipse.org/egit/)  \r\n[Using the EGit Eclipse plugin with GitHub](http://github.com/guides/using-the-egit-eclipse-plugin-with-github)  \r\n[SmartGit](http://www.syntevo.com/smartgit/index.html)  \r\n\r\n[GitHub for Windows](http://windows.github.com)\r\n[SourceTree (Windows and Mac)](http://sourcetreeapp.com/)  \r\n[TortoiseGit (Windows only)](http://code.google.com/p/tortoisegit/)  \r\n\r\n##Visual References\r\n[Git Tower's git cheat sheet](http://www.git-tower.com/files/cheatsheet/Git_Cheat_Sheet_white.pdf)  \r\n[A Visual Git Reference](http://marklodato.github.com/visual-git-guide/index-en.html)  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}